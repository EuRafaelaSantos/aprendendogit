Ola meu nome é Rafaela!
nova atualização!
Usando o git:
para iniciar usamos o comando GIT INIT
para verificar o status do nosso arquivo usamos o GIT STATUS
se houver alteração no arquivo, será exibido o nome do arquivo
modificado em vermelho.
para salvar / informar que houve alteração no arquivo usamos
o comando GIT ADD .
para criar um histórico de atualizações usamos o GIT COMMIT -M "O QUE FOI ALTERADO"
e para enviar a atualização ao repositório usamos o GIT PUSH.
para ver o histórico de atualizações, usamos o comando GIT REFLOG
para retornar a uma versão do código, localmente, usamos o 
comando GIT RESET --HARD NÚMERO DO COMMIT, OBTIDO POR MEIO DO REFLOG

AS BRANCHES
são os locais onde podemos colocar nossos arquivos com versões diferentes do código
interessante quando se trabalha em ambiente de produção.
a branche principal se chama MASTER
para saber quais branches disponíveis, usamos o comando GIT BRANCH
para adicionar uma nova branche, usamos o comando GIT BRANCH NOMEDABRANCHE
quando listamos as branches disponíveis, a branche que estamos 
usando atualmente aparece com um asterístico (*) ao lado
para mudar de brusche usamos o comando GIT CHECKOUT NOMEDABRANCHE

VOLTANDO PARA A BRANCHE PRINCIPAL E UNINDO OS CÓDIGOS
para voltar usamos o comando GIT CHECKOUT MASTER
para atualizar termos certeza que vamos unir os códigos mais atuais, 
usamos o comando GIT PULL
e para unir os códigos na banche principal usamos o comando
GIT MERGE NOMEDABRANCHETEMPORARIA
e para finalizar a união usamos o GIT PUSH
